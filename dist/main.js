(()=>{"use strict";var t={426:(t,n,e)=>{e.d(n,{Z:()=>s});var r=e(15),i=e.n(r),a=e(645),o=e.n(a)()(i());o.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap);"]),o.push([t.id,':root {\r\n\tfont-family: "Montserrat", sans-serif;\r\n}\r\n\r\nheader {\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tpadding: 1rem 2rem 3rem 2rem;\r\n}\r\n\r\n.branding {\r\n\tdisplay: flex;\r\n\twidth: 10rem;\r\n\tposition: relative;\r\n\tleft: -20px;\r\n}\r\n\r\n#logo {\r\n\twidth: 3rem;\r\n\ttop: 10px;\r\n\tposition: relative;\r\n\tleft: 15px;\r\n}\r\n\r\n#brand {\r\n\twidth: 8rem;\r\n}\r\n\r\nul {\r\n\tlist-style-type: none;\r\n\tmargin: 0;\r\n\tpadding: 1rem 0 0 0;\r\n}\r\n\r\nli {\r\n\tdisplay: inline;\r\n\tmargin-left: 4rem;\r\n\tcursor: pointer;\r\n\tfont-weight: 600;\r\n\tborder-bottom: 4px solid transparent;\r\n\ttransition: 0.25s;\r\n}\r\n\r\nli:hover,\r\n.active {\r\n\tborder-bottom: 4px solid black;\r\n}\r\n\r\n.main {\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tmargin-top: 2rem;\r\n\tflex-direction: row;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n.home-sample {\r\n\tobject-fit: cover;\r\n\twidth: 20rem;\r\n\tborder-radius: 20px;\r\n\theight: 25rem;\r\n\tmargin: 0px 2rem 0 2rem;\r\n\tbox-shadow: 0px 18px 23px 4px rgba(0, 0, 0, 0.16);\r\n\ttransition: 0.5s;\r\n}\r\n\r\n.home-sample:hover {\r\n\ttransform: scale(1.05);\r\n}\r\n\r\n.text-container {\r\n\tmargin: 0 2rem 0 2rem;\r\n\twidth: 25rem;\r\n}\r\n\r\n.text-container h2 {\r\n\tfont-size: 2.5rem;\r\n\tfont-weight: 900;\r\n\tmargin: 0;\r\n}\r\n\r\n.text-container p {\r\n\tfont-weight: 450;\r\n\tline-height: 1.5rem;\r\n}\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;CACC,qCAAqC;AACtC;;AAEA;CACC,aAAa;CACb,8BAA8B;CAC9B,4BAA4B;AAC7B;;AAEA;CACC,aAAa;CACb,YAAY;CACZ,kBAAkB;CAClB,WAAW;AACZ;;AAEA;CACC,WAAW;CACX,SAAS;CACT,kBAAkB;CAClB,UAAU;AACX;;AAEA;CACC,WAAW;AACZ;;AAEA;CACC,qBAAqB;CACrB,SAAS;CACT,mBAAmB;AACpB;;AAEA;CACC,eAAe;CACf,iBAAiB;CACjB,eAAe;CACf,gBAAgB;CAChB,oCAAoC;CACpC,iBAAiB;AAClB;;AAEA;;CAEC,8BAA8B;AAC/B;;AAEA;CACC,aAAa;CACb,WAAW;CACX,gBAAgB;CAChB,mBAAmB;CACnB,uBAAuB;CACvB,mBAAmB;AACpB;;AAEA;CACC,iBAAiB;CACjB,YAAY;CACZ,mBAAmB;CACnB,aAAa;CACb,uBAAuB;CACvB,iDAAiD;CACjD,gBAAgB;AACjB;;AAEA;CACC,sBAAsB;AACvB;;AAEA;CACC,qBAAqB;CACrB,YAAY;AACb;;AAEA;CACC,iBAAiB;CACjB,gBAAgB;CAChB,SAAS;AACV;;AAEA;CACC,gBAAgB;CAChB,mBAAmB;AACpB",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");\r\n\r\n:root {\r\n\tfont-family: "Montserrat", sans-serif;\r\n}\r\n\r\nheader {\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tpadding: 1rem 2rem 3rem 2rem;\r\n}\r\n\r\n.branding {\r\n\tdisplay: flex;\r\n\twidth: 10rem;\r\n\tposition: relative;\r\n\tleft: -20px;\r\n}\r\n\r\n#logo {\r\n\twidth: 3rem;\r\n\ttop: 10px;\r\n\tposition: relative;\r\n\tleft: 15px;\r\n}\r\n\r\n#brand {\r\n\twidth: 8rem;\r\n}\r\n\r\nul {\r\n\tlist-style-type: none;\r\n\tmargin: 0;\r\n\tpadding: 1rem 0 0 0;\r\n}\r\n\r\nli {\r\n\tdisplay: inline;\r\n\tmargin-left: 4rem;\r\n\tcursor: pointer;\r\n\tfont-weight: 600;\r\n\tborder-bottom: 4px solid transparent;\r\n\ttransition: 0.25s;\r\n}\r\n\r\nli:hover,\r\n.active {\r\n\tborder-bottom: 4px solid black;\r\n}\r\n\r\n.main {\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tmargin-top: 2rem;\r\n\tflex-direction: row;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n.home-sample {\r\n\tobject-fit: cover;\r\n\twidth: 20rem;\r\n\tborder-radius: 20px;\r\n\theight: 25rem;\r\n\tmargin: 0px 2rem 0 2rem;\r\n\tbox-shadow: 0px 18px 23px 4px rgba(0, 0, 0, 0.16);\r\n\ttransition: 0.5s;\r\n}\r\n\r\n.home-sample:hover {\r\n\ttransform: scale(1.05);\r\n}\r\n\r\n.text-container {\r\n\tmargin: 0 2rem 0 2rem;\r\n\twidth: 25rem;\r\n}\r\n\r\n.text-container h2 {\r\n\tfont-size: 2.5rem;\r\n\tfont-weight: 900;\r\n\tmargin: 0;\r\n}\r\n\r\n.text-container p {\r\n\tfont-weight: 450;\r\n\tline-height: 1.5rem;\r\n}\r\n'],sourceRoot:""}]);const s=o},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e=t(n);return n[2]?"@media ".concat(n[2]," {").concat(e,"}"):e})).join("")},n.i=function(t,e,r){"string"==typeof t&&(t=[[null,t,""]]);var i={};if(r)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(i[o]=!0)}for(var s=0;s<t.length;s++){var c=[].concat(t[s]);r&&i[c[0]]||(e&&(c[2]?c[2]="".concat(e," and ").concat(c[2]):c[2]=e),n.push(c))}},n}},15:t=>{function n(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,r=new Array(n);e<n;e++)r[e]=t[e];return r}t.exports=function(t){var e,r,i=(r=4,function(t){if(Array.isArray(t))return t}(e=t)||function(t,n){var e=t&&("undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"]);if(null!=e){var r,i,a=[],o=!0,s=!1;try{for(e=e.call(t);!(o=(r=e.next()).done)&&(a.push(r.value),!n||a.length!==n);o=!0);}catch(t){s=!0,i=t}finally{try{o||null==e.return||e.return()}finally{if(s)throw i}}return a}}(e,r)||function(t,e){if(t){if("string"==typeof t)return n(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(t,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=i[1],o=i[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),l="/*# ".concat(c," */"),A=o.sources.map((function(t){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(t," */")}));return[a].concat(A).concat([l]).join("\n")}return[a].join("\n")}},695:t=>{var n={};t.exports=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}},379:t=>{var n=[];function e(t){for(var e=-1,r=0;r<n.length;r++)if(n[r].identifier===t){e=r;break}return e}function r(t,r){for(var a={},o=[],s=0;s<t.length;s++){var c=t[s],l=r.base?c[0]+r.base:c[0],A=a[l]||0,d="".concat(l," ").concat(A);a[l]=A+1;var m=e(d),p={css:c[1],media:c[2],sourceMap:c[3]};-1!==m?(n[m].references++,n[m].updater(p)):n.push({identifier:d,updater:i(p,r),references:1}),o.push(d)}return o}function i(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap)return;e.update(t=n)}else e.remove()}}t.exports=function(t,i){var a=r(t=t||[],i=i||{});return function(t){t=t||[];for(var o=0;o<a.length;o++){var s=e(a[o]);n[s].references--}for(var c=r(t,i),l=0;l<a.length;l++){var A=e(a[l]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=c}}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n),n}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var r=e.css,i=e.media,a=e.sourceMap;i?t.setAttribute("media",i):t.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,t)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},774:(t,n,e)=>{t.exports=e.p+"14652621c2b989d90172.svg"},464:(t,n,e)=>{t.exports=e.p+"75e759c92d9db6136b43.svg"},918:(t,n,e)=>{t.exports=e.p+"748b5cd6b257c97af174.jpg"}},n={};function e(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={id:r,exports:{}};return t[r](a,a.exports,e),a.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var r=n.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),(()=>{var t=e(379),n=e.n(t),r=e(795),i=e.n(r),a=e(695),o=e.n(a),s=e(216),c=e.n(s),l=e(426),A={styleTagTransform:function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}},setAttributes:function(t){var n=e.nc;n&&t.setAttribute("nonce",n)},insert:function(t){var n=o()("head");if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(t)}};A.domAPI=i(),A.insertStyleElement=c(),n()(l.Z,A),l.Z&&l.Z.locals&&l.Z.locals;var d=e(464),m=e(774),p=e(918);function u(){let t=document.getElementById("main"),n=new Image;n.src=p,n.alt="Sample",n.classList.add("home-sample");let e=document.createElement("h2");e.innerHTML="Good food<br>for a good day";let r=document.createElement("p");r.innerHTML="With the ingredients straight from our organic farm, \n                   we're proud to deliver the most delicious meal for you and the one you love the most.";let i=document.createElement("div");i.classList.add("text-container"),i.appendChild(e),i.appendChild(r),t.appendChild(n),t.appendChild(i)}let C=document.getElementById("content"),f=document.createElement("div");f.classList.add("main"),f.id="main",C.appendChild(function(){let t=document.createElement("header"),n=document.createElement("div");n.classList.add("branding");let e=new Image;e.src=d,e.id="logo";let r=new Image;r.src=m,r.id="brand",n.appendChild(e),n.appendChild(r);let i=document.createElement("ul");return i.classList.add("nav"),["home","menu","contact"].forEach((t=>{let n=document.createElement("li");n.classList.add("nav-link"),n.innerHTML=t,i.appendChild(n)})),t.appendChild(n),t.appendChild(i),t}()),C.appendChild(f),u();let h=document.getElementsByClassName("nav-link");h[0].classList.add("active"),h[0].onclick=()=>{document.getElementById("main").innerHTML="",h[0].classList.add("active"),h[1].classList.remove("active"),h[2].classList.remove("active"),u()},h[1].onclick=()=>{document.getElementById("main").innerHTML="",h[1].classList.add("active"),h[0].classList.remove("active"),h[2].classList.remove("active"),function(){let t=document.getElementById("main"),n=document.createElement("p");n.innerHTML="Testing menu",t.appendChild(n)}()},h[2].onclick=()=>{document.getElementById("main").innerHTML="",h[2].classList.add("active"),h[0].classList.remove("active"),h[1].classList.remove("active"),function(){let t=document.getElementById("main"),n=document.createElement("p");n.innerHTML="Testing contact",t.appendChild(n)}()}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2UvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VGFyZ2V0LmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2UvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2Uvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2UvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlLy4vc3JjL2hvbWUuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS8uL3NyYy9oZWFkZXIuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlLy4vc3JjL21lbnUuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlLy4vc3JjL2NvbnRhY3QuanMiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsImNvbmNhdCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhUXVlcnkiLCJkZWR1cGUiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwibGVuZ3RoIiwiX2kiLCJfYXJyYXlMaWtlVG9BcnJheSIsImFyciIsImxlbiIsImFycjIiLCJBcnJheSIsIl9pdGVtIiwiaXNBcnJheSIsIl9hcnJheVdpdGhIb2xlcyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiX3MiLCJfZSIsIl9hcnIiLCJfbiIsIl9kIiwiY2FsbCIsIm5leHQiLCJkb25lIiwidmFsdWUiLCJlcnIiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJvIiwibWluTGVuIiwibiIsIk9iamVjdCIsInByb3RvdHlwZSIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiZnJvbSIsInRlc3QiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJUeXBlRXJyb3IiLCJfbm9uSXRlcmFibGVSZXN0IiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsIm1lbW8iLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJzdHlsZXNJbkRvbSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleCIsIm9iaiIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRTdHlsZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaW5kZXgiLCJzcGxpY2UiLCJzdHlsZSIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsImluc2VydCIsImluc2VydFN0eWxlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwiaGFzT3duUHJvcGVydHkiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiRXJyb3IiLCJyZXBsYWNlIiwicCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImFwcGVuZENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJub25jZSIsInNob3dIb21lIiwibWFpbiIsImdldEVsZW1lbnRCeUlkIiwic2FtcGxlSW1nIiwiSW1hZ2UiLCJhbHQiLCJjbGFzc0xpc3QiLCJhZGQiLCJoZWFkbGluZSIsImlubmVySFRNTCIsInRleHRDb250YWluZXIiLCJoZWFkZXIiLCJsb2dvQ29udGFpbmVyIiwibG9nbyIsImJyYW5kaW5nIiwidWwiLCJmb3JFYWNoIiwibGkiLCJzaG93SGVhZGVyIiwibmF2SXRlbXMiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwib25jbGljayIsInNob3dNZW51Iiwic2hvd0NvbnRhY3QiXSwibWFwcGluZ3MiOiJ1RkFHSUEsRSxNQUEwQixHQUE0QixLQUMxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSx5TUFFekNILEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUksKzZDQUFrN0MsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsNkJBQTZCLE1BQVEsR0FBRyxTQUFXLHFxQkFBcXFCLGVBQWlCLENBQUMsOG5EQUFrb0QsV0FBYSxNQUUvMkgsVyxRQ0FBRCxFQUFPRSxRQUFVLFNBQVVDLEdBQ3pCLElBQUlDLEVBQU8sR0F1RFgsT0FyREFBLEVBQUtDLFNBQVcsV0FDZCxPQUFPQyxLQUFLQyxLQUFJLFNBQVVDLEdBQ3hCLElBQUlDLEVBQVVOLEVBQXVCSyxHQUVyQyxPQUFJQSxFQUFLLEdBQ0EsVUFBVUUsT0FB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QUdiLFVBQVVDLElBQUksVUFDMUJZLEVBQVMsR0FBR2IsVUFBVTdELE9BQU8sVUFDN0IwRSxFQUFTLEdBQUdiLFVBQVU3RCxPQUFPLFVHekNsQixXQUNYLElBQUl3RCxFQUFPckYsU0FBU3NGLGVBQWUsUUFFL0JULEVBQUk3RSxTQUFTb0MsY0FBYyxLQUMvQnlDLEVBQUVnQixVQUFZLGtCQUVkUixFQUFLSixZQUFZSixHSG9DakI4QixLIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU1vbnRzZXJyYXQ6aXRhbCx3Z2h0QDAsMTAwOzAsMjAwOzAsMzAwOzAsNDAwOzAsNTAwOzAsNjAwOzAsNzAwOzAsODAwOzAsOTAwOzEsMTAwOzEsMjAwOzEsMzAwOzEsNDAwOzEsNTAwOzEsNjAwOzEsNzAwOzEsODAwOzEsOTAwJmRpc3BsYXk9c3dhcCk7XCJdKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIjpyb290IHtcXHJcXG5cXHRmb250LWZhbWlseTogXFxcIk1vbnRzZXJyYXRcXFwiLCBzYW5zLXNlcmlmO1xcclxcbn1cXHJcXG5cXHJcXG5oZWFkZXIge1xcclxcblxcdGRpc3BsYXk6IGZsZXg7XFxyXFxuXFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcblxcdHBhZGRpbmc6IDFyZW0gMnJlbSAzcmVtIDJyZW07XFxyXFxufVxcclxcblxcclxcbi5icmFuZGluZyB7XFxyXFxuXFx0ZGlzcGxheTogZmxleDtcXHJcXG5cXHR3aWR0aDogMTByZW07XFxyXFxuXFx0cG9zaXRpb246IHJlbGF0aXZlO1xcclxcblxcdGxlZnQ6IC0yMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4jbG9nbyB7XFxyXFxuXFx0d2lkdGg6IDNyZW07XFxyXFxuXFx0dG9wOiAxMHB4O1xcclxcblxcdHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG5cXHRsZWZ0OiAxNXB4O1xcclxcbn1cXHJcXG5cXHJcXG4jYnJhbmQge1xcclxcblxcdHdpZHRoOiA4cmVtO1xcclxcbn1cXHJcXG5cXHJcXG51bCB7XFxyXFxuXFx0bGlzdC1zdHlsZS10eXBlOiBub25lO1xcclxcblxcdG1hcmdpbjogMDtcXHJcXG5cXHRwYWRkaW5nOiAxcmVtIDAgMCAwO1xcclxcbn1cXHJcXG5cXHJcXG5saSB7XFxyXFxuXFx0ZGlzcGxheTogaW5saW5lO1xcclxcblxcdG1hcmdpbi1sZWZ0OiA0cmVtO1xcclxcblxcdGN1cnNvcjogcG9pbnRlcjtcXHJcXG5cXHRmb250LXdlaWdodDogNjAwO1xcclxcblxcdGJvcmRlci1ib3R0b206IDRweCBzb2xpZCB0cmFuc3BhcmVudDtcXHJcXG5cXHR0cmFuc2l0aW9uOiAwLjI1cztcXHJcXG59XFxyXFxuXFxyXFxubGk6aG92ZXIsXFxyXFxuLmFjdGl2ZSB7XFxyXFxuXFx0Ym9yZGVyLWJvdHRvbTogNHB4IHNvbGlkIGJsYWNrO1xcclxcbn1cXHJcXG5cXHJcXG4ubWFpbiB7XFxyXFxuXFx0ZGlzcGxheTogZmxleDtcXHJcXG5cXHR3aWR0aDogMTAwJTtcXHJcXG5cXHRtYXJnaW4tdG9wOiAycmVtO1xcclxcblxcdGZsZXgtZGlyZWN0aW9uOiByb3c7XFxyXFxuXFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuXFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmhvbWUtc2FtcGxlIHtcXHJcXG5cXHRvYmplY3QtZml0OiBjb3ZlcjtcXHJcXG5cXHR3aWR0aDogMjByZW07XFxyXFxuXFx0Ym9yZGVyLXJhZGl1czogMjBweDtcXHJcXG5cXHRoZWlnaHQ6IDI1cmVtO1xcclxcblxcdG1hcmdpbjogMHB4IDJyZW0gMCAycmVtO1xcclxcblxcdGJveC1zaGFkb3c6IDBweCAxOHB4IDIzcHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xNik7XFxyXFxuXFx0dHJhbnNpdGlvbjogMC41cztcXHJcXG59XFxyXFxuXFxyXFxuLmhvbWUtc2FtcGxlOmhvdmVyIHtcXHJcXG5cXHR0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xcclxcbn1cXHJcXG5cXHJcXG4udGV4dC1jb250YWluZXIge1xcclxcblxcdG1hcmdpbjogMCAycmVtIDAgMnJlbTtcXHJcXG5cXHR3aWR0aDogMjVyZW07XFxyXFxufVxcclxcblxcclxcbi50ZXh0LWNvbnRhaW5lciBoMiB7XFxyXFxuXFx0Zm9udC1zaXplOiAyLjVyZW07XFxyXFxuXFx0Zm9udC13ZWlnaHQ6IDkwMDtcXHJcXG5cXHRtYXJnaW46IDA7XFxyXFxufVxcclxcblxcclxcbi50ZXh0LWNvbnRhaW5lciBwIHtcXHJcXG5cXHRmb250LXdlaWdodDogNDUwO1xcclxcblxcdGxpbmUtaGVpZ2h0OiAxLjVyZW07XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7Q0FDQyxxQ0FBcUM7QUFDdEM7O0FBRUE7Q0FDQyxhQUFhO0NBQ2IsOEJBQThCO0NBQzlCLDRCQUE0QjtBQUM3Qjs7QUFFQTtDQUNDLGFBQWE7Q0FDYixZQUFZO0NBQ1osa0JBQWtCO0NBQ2xCLFdBQVc7QUFDWjs7QUFFQTtDQUNDLFdBQVc7Q0FDWCxTQUFTO0NBQ1Qsa0JBQWtCO0NBQ2xCLFVBQVU7QUFDWDs7QUFFQTtDQUNDLFdBQVc7QUFDWjs7QUFFQTtDQUNDLHFCQUFxQjtDQUNyQixTQUFTO0NBQ1QsbUJBQW1CO0FBQ3BCOztBQUVBO0NBQ0MsZUFBZTtDQUNmLGlCQUFpQjtDQUNqQixlQUFlO0NBQ2YsZ0JBQWdCO0NBQ2hCLG9DQUFvQztDQUNwQyxpQkFBaUI7QUFDbEI7O0FBRUE7O0NBRUMsOEJBQThCO0FBQy9COztBQUVBO0NBQ0MsYUFBYTtDQUNiLFdBQVc7Q0FDWCxnQkFBZ0I7Q0FDaEIsbUJBQW1CO0NBQ25CLHVCQUF1QjtDQUN2QixtQkFBbUI7QUFDcEI7O0FBRUE7Q0FDQyxpQkFBaUI7Q0FDakIsWUFBWTtDQUNaLG1CQUFtQjtDQUNuQixhQUFhO0NBQ2IsdUJBQXVCO0NBQ3ZCLGlEQUFpRDtDQUNqRCxnQkFBZ0I7QUFDakI7O0FBRUE7Q0FDQyxzQkFBc0I7QUFDdkI7O0FBRUE7Q0FDQyxxQkFBcUI7Q0FDckIsWUFBWTtBQUNiOztBQUVBO0NBQ0MsaUJBQWlCO0NBQ2pCLGdCQUFnQjtDQUNoQixTQUFTO0FBQ1Y7O0FBRUE7Q0FDQyxnQkFBZ0I7Q0FDaEIsbUJBQW1CO0FBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKFxcXCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU1vbnRzZXJyYXQ6aXRhbCx3Z2h0QDAsMTAwOzAsMjAwOzAsMzAwOzAsNDAwOzAsNTAwOzAsNjAwOzAsNzAwOzAsODAwOzAsOTAwOzEsMTAwOzEsMjAwOzEsMzAwOzEsNDAwOzEsNTAwOzEsNjAwOzEsNzAwOzEsODAwOzEsOTAwJmRpc3BsYXk9c3dhcFxcXCIpO1xcclxcblxcclxcbjpyb290IHtcXHJcXG5cXHRmb250LWZhbWlseTogXFxcIk1vbnRzZXJyYXRcXFwiLCBzYW5zLXNlcmlmO1xcclxcbn1cXHJcXG5cXHJcXG5oZWFkZXIge1xcclxcblxcdGRpc3BsYXk6IGZsZXg7XFxyXFxuXFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcblxcdHBhZGRpbmc6IDFyZW0gMnJlbSAzcmVtIDJyZW07XFxyXFxufVxcclxcblxcclxcbi5icmFuZGluZyB7XFxyXFxuXFx0ZGlzcGxheTogZmxleDtcXHJcXG5cXHR3aWR0aDogMTByZW07XFxyXFxuXFx0cG9zaXRpb246IHJlbGF0aXZlO1xcclxcblxcdGxlZnQ6IC0yMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4jbG9nbyB7XFxyXFxuXFx0d2lkdGg6IDNyZW07XFxyXFxuXFx0dG9wOiAxMHB4O1xcclxcblxcdHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG5cXHRsZWZ0OiAxNXB4O1xcclxcbn1cXHJcXG5cXHJcXG4jYnJhbmQge1xcclxcblxcdHdpZHRoOiA4cmVtO1xcclxcbn1cXHJcXG5cXHJcXG51bCB7XFxyXFxuXFx0bGlzdC1zdHlsZS10eXBlOiBub25lO1xcclxcblxcdG1hcmdpbjogMDtcXHJcXG5cXHRwYWRkaW5nOiAxcmVtIDAgMCAwO1xcclxcbn1cXHJcXG5cXHJcXG5saSB7XFxyXFxuXFx0ZGlzcGxheTogaW5saW5lO1xcclxcblxcdG1hcmdpbi1sZWZ0OiA0cmVtO1xcclxcblxcdGN1cnNvcjogcG9pbnRlcjtcXHJcXG5cXHRmb250LXdlaWdodDogNjAwO1xcclxcblxcdGJvcmRlci1ib3R0b206IDRweCBzb2xpZCB0cmFuc3BhcmVudDtcXHJcXG5cXHR0cmFuc2l0aW9uOiAwLjI1cztcXHJcXG59XFxyXFxuXFxyXFxubGk6aG92ZXIsXFxyXFxuLmFjdGl2ZSB7XFxyXFxuXFx0Ym9yZGVyLWJvdHRvbTogNHB4IHNvbGlkIGJsYWNrO1xcclxcbn1cXHJcXG5cXHJcXG4ubWFpbiB7XFxyXFxuXFx0ZGlzcGxheTogZmxleDtcXHJcXG5cXHR3aWR0aDogMTAwJTtcXHJcXG5cXHRtYXJnaW4tdG9wOiAycmVtO1xcclxcblxcdGZsZXgtZGlyZWN0aW9uOiByb3c7XFxyXFxuXFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuXFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmhvbWUtc2FtcGxlIHtcXHJcXG5cXHRvYmplY3QtZml0OiBjb3ZlcjtcXHJcXG5cXHR3aWR0aDogMjByZW07XFxyXFxuXFx0Ym9yZGVyLXJhZGl1czogMjBweDtcXHJcXG5cXHRoZWlnaHQ6IDI1cmVtO1xcclxcblxcdG1hcmdpbjogMHB4IDJyZW0gMCAycmVtO1xcclxcblxcdGJveC1zaGFkb3c6IDBweCAxOHB4IDIzcHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xNik7XFxyXFxuXFx0dHJhbnNpdGlvbjogMC41cztcXHJcXG59XFxyXFxuXFxyXFxuLmhvbWUtc2FtcGxlOmhvdmVyIHtcXHJcXG5cXHR0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xcclxcbn1cXHJcXG5cXHJcXG4udGV4dC1jb250YWluZXIge1xcclxcblxcdG1hcmdpbjogMCAycmVtIDAgMnJlbTtcXHJcXG5cXHR3aWR0aDogMjVyZW07XFxyXFxufVxcclxcblxcclxcbi50ZXh0LWNvbnRhaW5lciBoMiB7XFxyXFxuXFx0Zm9udC1zaXplOiAyLjVyZW07XFxyXFxuXFx0Zm9udC13ZWlnaHQ6IDkwMDtcXHJcXG5cXHRtYXJnaW46IDA7XFxyXFxufVxcclxcblxcclxcbi50ZXh0LWNvbnRhaW5lciBwIHtcXHJcXG5cXHRmb250LXdlaWdodDogNDUwO1xcclxcblxcdGxpbmUtaGVpZ2h0OiAxLjVyZW07XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyB2YXIgX2kgPSBhcnIgJiYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXSk7IGlmIChfaSA9PSBudWxsKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX3MsIF9lOyB0cnkgeyBmb3IgKF9pID0gX2kuY2FsbChhcnIpOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFRhcmdldDsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRG9tID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5Eb20ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5Eb21baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGVzSW5Eb20ucHVzaCh7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IGFkZFN0eWxlKG9iaiwgb3B0aW9ucyksXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhzdHlsZSwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoc3R5bGUpO1xuICByZXR1cm4gc3R5bGU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZShcIm1lZGlhXCIpO1xuICB9XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGUpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlLCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGdldFRhcmdldCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFRhcmdldC5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBmdW5jdGlvbihjc3MsIHN0eWxlKXtcbiAgICAgIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICAgIH1cblxuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gICAgfVxuICB9O1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gZnVuY3Rpb24oc3R5bGUpIHtcbiAgICAgICAgdmFyIG5vbmNlID1cbiAgICAgICAgICB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgICAgICAgaWYgKG5vbmNlKSB7XG4gICAgICAgICAgc3R5bGUuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICAgICAgICB9XG4gICAgICB9O1xub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihzdHlsZSl7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChcImhlYWRcIik7XG5cbiAgICBpZiAoIXRhcmdldCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIlxuICAgICAgKTtcbiAgICB9XG5cbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICB9O1xub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IG15SW1hZ2UgZnJvbSBcIi4vc2FtcGxlLmpwZ1wiXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzaG93SG9tZSgpIHtcclxuICAgIGxldCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xyXG5cclxuICAgIC8vIFNhbXBsZSBpbWFnZVxyXG4gICAgbGV0IHNhbXBsZUltZyA9IG5ldyBJbWFnZSgpO1xyXG4gICAgc2FtcGxlSW1nLnNyYyA9IG15SW1hZ2U7XHJcbiAgICBzYW1wbGVJbWcuYWx0ID0gXCJTYW1wbGVcIjtcclxuICAgIHNhbXBsZUltZy5jbGFzc0xpc3QuYWRkKFwiaG9tZS1zYW1wbGVcIilcclxuXHJcbiAgICAvLyBIZWFkbGluZVxyXG4gICAgbGV0IGhlYWRsaW5lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgyXCIpO1xyXG4gICAgaGVhZGxpbmUuaW5uZXJIVE1MID0gXCJHb29kIGZvb2Q8YnI+Zm9yIGEgZ29vZCBkYXlcIjtcclxuXHJcbiAgICAvLyBQYXJhZ3JhcGhcclxuICAgIGxldCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcbiAgICBwLmlubmVySFRNTCA9IGBXaXRoIHRoZSBpbmdyZWRpZW50cyBzdHJhaWdodCBmcm9tIG91ciBvcmdhbmljIGZhcm0sIFxyXG4gICAgICAgICAgICAgICAgICAgd2UncmUgcHJvdWQgdG8gZGVsaXZlciB0aGUgbW9zdCBkZWxpY2lvdXMgbWVhbCBmb3IgeW91IGFuZCB0aGUgb25lIHlvdSBsb3ZlIHRoZSBtb3N0LmBcclxuXHJcbiAgICBsZXQgdGV4dENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICB0ZXh0Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ0ZXh0LWNvbnRhaW5lclwiKTtcclxuICAgIHRleHRDb250YWluZXIuYXBwZW5kQ2hpbGQoaGVhZGxpbmUpO1xyXG4gICAgdGV4dENvbnRhaW5lci5hcHBlbmRDaGlsZChwKTtcclxuXHJcbiAgICAvLyBBcHBlbmQgYWxsIGVsZW1lbnRzIHRvIHRoZSBtYWluIHNlY3Rpb25cclxuICAgIG1haW4uYXBwZW5kQ2hpbGQoc2FtcGxlSW1nKTtcclxuICAgIG1haW4uYXBwZW5kQ2hpbGQodGV4dENvbnRhaW5lcik7XHJcbn0iLCJpbXBvcnQgXCIuL3N0eWxlLmNzc1wiXHJcbmltcG9ydCBzaG93SGVhZGVyIGZyb20gXCIuL2hlYWRlclwiXHJcbmltcG9ydCBzaG93SG9tZSBmcm9tIFwiLi9ob21lXCJcclxuaW1wb3J0IHNob3dNZW51IGZyb20gXCIuL21lbnVcIlxyXG5pbXBvcnQgc2hvd0NvbnRhY3QgZnJvbSBcIi4vY29udGFjdFwiXHJcblxyXG4vLyBDcmVhdGUgJiBnZXQgdGhlIGJhcmVib25lIGVsZW1lbnRzXHJcbmxldCBjb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50XCIpO1xyXG5sZXQgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbm1haW4uY2xhc3NMaXN0LmFkZChcIm1haW5cIik7XHJcbm1haW4uaWQgPSBcIm1haW5cIjtcclxuXHJcbi8vIEluaXQgdGhlIGNvbnRlbnRzXHJcbmNvbnRlbnQuYXBwZW5kQ2hpbGQoc2hvd0hlYWRlcigpKTtcclxuY29udGVudC5hcHBlbmRDaGlsZChtYWluKTtcclxuc2hvd0hvbWUoKTtcclxuXHJcbi8vIFRhYiBzd2l0Y2hpbmcgbG9naWNcclxubGV0IG5hdkl0ZW1zID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm5hdi1saW5rXCIpXHJcbm5hdkl0ZW1zWzBdLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XHJcblxyXG5uYXZJdGVtc1swXS5vbmNsaWNrID0gKCkgPT4ge1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpLmlubmVySFRNTCA9IFwiXCI7XHJcbiAgICBuYXZJdGVtc1swXS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgbmF2SXRlbXNbMV0uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgIG5hdkl0ZW1zWzJdLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICBzaG93SG9tZSgpO1xyXG59XHJcblxyXG5uYXZJdGVtc1sxXS5vbmNsaWNrID0gKCkgPT4ge1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpLmlubmVySFRNTCA9IFwiXCI7XHJcbiAgICBuYXZJdGVtc1sxXS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgbmF2SXRlbXNbMF0uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgIG5hdkl0ZW1zWzJdLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICBzaG93TWVudSgpO1xyXG59XHJcblxyXG5uYXZJdGVtc1syXS5vbmNsaWNrID0gKCkgPT4ge1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpLmlubmVySFRNTCA9IFwiXCI7XHJcbiAgICBuYXZJdGVtc1syXS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgbmF2SXRlbXNbMF0uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgIG5hdkl0ZW1zWzFdLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICBzaG93Q29udGFjdCgpO1xyXG59XHJcbiIsImltcG9ydCBteUxvZ28gZnJvbSBcIi4vbG9nby5zdmdcIlxyXG5pbXBvcnQgbXlCcmFuZCBmcm9tIFwiLi9icmFuZC5zdmdcIlxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2hvd0hlYWRlcigpIHtcclxuICAgIC8vIEhlYWRlciBzZWN0aW9uXHJcbiAgICBsZXQgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImhlYWRlclwiKTtcclxuXHJcbiAgICAvLyBMb2dvIGFuZCBicmFuZGluZ1xyXG4gICAgbGV0IGxvZ29Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgbG9nb0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiYnJhbmRpbmdcIik7XHJcbiAgICBsZXQgbG9nbyA9IG5ldyBJbWFnZSgpO1xyXG4gICAgbG9nby5zcmMgPSBteUxvZ287XHJcbiAgICBsb2dvLmlkID0gXCJsb2dvXCI7XHJcbiAgICBsZXQgYnJhbmRpbmcgPSBuZXcgSW1hZ2UoKTtcclxuICAgIGJyYW5kaW5nLnNyYyA9IG15QnJhbmQ7XHJcbiAgICBicmFuZGluZy5pZCA9IFwiYnJhbmRcIjtcclxuICAgIGxvZ29Db250YWluZXIuYXBwZW5kQ2hpbGQobG9nbyk7XHJcbiAgICBsb2dvQ29udGFpbmVyLmFwcGVuZENoaWxkKGJyYW5kaW5nKTtcclxuXHJcbiAgICAvLyBDcmVhdGUgYSBsaXN0IGZvciBuYXYgYmFyXHJcbiAgICBsZXQgdWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidWxcIik7XHJcbiAgICB1bC5jbGFzc0xpc3QuYWRkKFwibmF2XCIpO1xyXG4gICAgbGV0IG5hdkl0ZW1zID0gW1wiaG9tZVwiLCBcIm1lbnVcIiwgXCJjb250YWN0XCJdO1xyXG4gICAgbmF2SXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICAgIGxldCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcclxuICAgICAgICBsaS5jbGFzc0xpc3QuYWRkKFwibmF2LWxpbmtcIik7XHJcbiAgICAgICAgbGkuaW5uZXJIVE1MID0gaXRlbTtcclxuICAgICAgICB1bC5hcHBlbmRDaGlsZChsaSk7XHJcbiAgICB9KVxyXG5cclxuICAgIC8vIEFwcGVuZCBhbGwgZWxlbWVudHMgdG8gdGhlIGhlYWRlclxyXG4gICAgaGVhZGVyLmFwcGVuZENoaWxkKGxvZ29Db250YWluZXIpO1xyXG4gICAgaGVhZGVyLmFwcGVuZENoaWxkKHVsKTtcclxuXHJcbiAgICByZXR1cm4gaGVhZGVyO1xyXG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2hvd01lbnUoKSB7XHJcbiAgICBsZXQgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcclxuXHJcbiAgICBsZXQgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xyXG4gICAgcC5pbm5lckhUTUwgPSBcIlRlc3RpbmcgbWVudVwiO1xyXG5cclxuICAgIG1haW4uYXBwZW5kQ2hpbGQocCk7XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzaG93Q29udGFjdCgpIHtcclxuICAgIGxldCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xyXG5cclxuICAgIGxldCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcbiAgICBwLmlubmVySFRNTCA9IFwiVGVzdGluZyBjb250YWN0XCI7XHJcblxyXG4gICAgbWFpbi5hcHBlbmRDaGlsZChwKTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0=